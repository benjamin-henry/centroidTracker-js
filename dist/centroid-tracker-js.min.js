(()=>{var e={10:e=>{class t{constructor(e,t){this.objectID=e,this.centroids=[t],this.counted=!1}}e.exports=class{constructor(e=50){this.nextObjectID=0,this.objects={},this.disappeared={},this.trackableObjects={},this.maxDisappeared=e}euclideanDistance(e,t){const s=e[0]-t[0],i=e[1]-t[1];return Math.sqrt(s*s+i*i)}register(e){this.objects[this.nextObjectID]=e,this.disappeared[this.nextObjectID]=0,this.nextObjectID++}deregister(e){delete this.objects[e],delete this.disappeared[e],delete this.trackableObjects[e]}update(e){if(0==e.length)return Object.keys(this.disappeared).forEach((e=>{this.disappeared[e]+=1,this.disappeared[e]>this.maxDisappeared&&this.deregister(e)})),Object.assign({},this.objects);let t=[];for(let s=0;s<e.length;s++)t.push([~~((e[s].topLeft[0]+e[s].bottomRight[0])/2),~~((e[s].topLeft[1]+e[s].bottomRight[1])/2)]);if(0==Object.keys(this.objects).length)t.forEach((e=>{this.register(e)}));else{const e=Object.keys(this.objects),s=e.map((e=>this.objects[e]));let i=new Array(this.objects.length);for(let e=0;e<s.length;e++){i[e]=new Array(t.length);for(let r=0;r<t.length;r++)i[e][r]=this.euclideanDistance(t[r],s[e])}let r=[],h=[];for(let e=0;e<i.length;e++){r.push(Math.min(...i[e]));let t=i[e][0];h.push(0);for(let s=1;s<i[e].length;s++)i[e][s]<=t&&(t=i[e][s],h[e]=s)}const c=r.map(((e,t)=>[e,t])).sort().map((e=>e[1]));let a=[];for(let e=0;e<h.length;e++)a.push(h[c[e]]);let o=[],n=[];for(let s=0;s<c.length;s++){if(o.includes(c[s])||n.includes(a[s]))continue;const i=e[c[s]];this.objects[i]=t[a[s]],this.disappeared[i]=0,o.push(c[s]),n.push(a[s])}let l=[],p=[];for(let e=0;e<i.length;e++)o.includes(e)||l.push(e);for(let e=0;e<i[0].length;e++)n.includes(e)||p.push(e);i.length>=i[0].length?l.forEach((t=>{const s=e[t];this.disappeared[s]+=1,this.disappeared[s]>this.maxDisappeared&&this.deregister(s)})):p.forEach((e=>{this.register(t[e])}))}return this.updateTrackable(this.objects),Object.assign({},this.objects)}updateTrackable(e){Object.entries(e).forEach((([e,s])=>{let i=this.trackableObjects[e];if(null==i||null==i)i=new t(e,s);else{let e=i.centroids.map((e=>e[0])),t=i.centroids.map((e=>e[1])),r=0,h=0;e.forEach((e=>{r+=e})),r/=e.length,x_direction=s[0]-r,t.forEach((e=>{h+=e})),h/=t.length,y_direction=s[1]-h,i.centroids.push(s),!1===i.counted&&(y_direction<0&&s[1]<250?console.log("up"):y_direction>0&&s[1]>250&&console.log("down"))}this.trackableObjects[e]=i}))}}}},t={};!function s(i){var r=t[i];if(void 0!==r)return r.exports;var h=t[i]={exports:{}};return e[i](h,h.exports,s),h.exports}(10)})();